paths:
  /api/users/:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: "Se obtuvieron todos los usuarios"
          content:
            application/json:
              type: Array
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: "Ocurrio un error a nivel de base de datos"
    post:
      summary: Crear un usuario
      tags:
        - Users
      requestBody:
        require: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/createUser"
      responses:
        "200":
          description: "Usuario creado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: "Ocurrio un error al crear usuario"
  /api/users/{uid}:
    get:
      summary: Obtener un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario
          schema:
            $type: String
      responses:
        "200":
          description: "Usuario encontrado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: "Ocurrio un error a nivel de base de datos"
    put:
      summary: Actualizar un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario
          schema:
            $type: String
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateUser"
      responses:
        "200":
          description: "Usuario actualizado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: "Ocurrio un error al actualizar el usuario"
    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario
          schema:
            $type: String
      responses:
        "200":
          description: "Usuario eliminado correctamente"
        "500":
          description: "Ocurrio un error al eliminar el usuario"
  /api/users/email/{email}:
    get:
      summary: Obtener un usuario por email
      tags:
        - Users
      parameters:
        - name: email
          in: path
          required: true
          description: email del usuario
          schema:
            $type: String
      responses:
        "200":
          description: "Usuario encontrado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: "Ocurrio un error a nivel de base de datos"
  /api/users/recoverPw/:
    post:
      summary: Recuperar contraseña
      tags:
        - Users
      requestBody:
        require: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/recoverPw"
      responses:
        "200":
          description: "Contraseña actualizada"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: "Ocurrio un error al actualizar la contraseña"
components:
  schemas:
    Users:
      type: object
      properties:
        _id:
          type: ObjectId
          description: id de mongo
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario
        age:
          type: Number
          description: Edad del usuario
        password:
          type: String
          description: Contraseña del usuario
        cart:
          type: Object
          description: Carrito del usuario
          schema:
            $ref: "#/components/schemas/Users"
        role:
          type: String
          description: Rol del usuario
      example:
        _id: ObjectId("156k8nk34jn5ff")
        first_name: Oscar
        last_name: Ramirez
        email: oscarramirez@test.com
        age: 32
        password: 123
        cart: {}
        role: user
  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario
        age:
          type: Number
          description: Edad del usuario
        cart:
          type: Object
          description: Carrito del usuario
          schema:
            $ref: "#/components/schemas/Users"
        role:
          type: String
          description: Rol del usuario
      example:
        _id: ObjectId("156k8nk34jn5ff")
        first_name: Oscar
        last_name: Ramirez
        email: oscarramirez@test.com
        age: 32
        password: 123
        cart: {}
        role: user
    updateUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario
        age:
          type: Number
          description: Edad del usuario
        cart:
          type: Object
          description: Carrito del usuario
          schema:
            $ref: "#/components/schemas/Users"
        role:
          type: String
          description: Rol del usuario
      example:
        _id: ObjectId("156k8nk34jn5ff")
        first_name: Oscar
        last_name: Ramirez
        email: oscarramirez@test.com
        age: 32
        password: 123
        cart: {}
        role: user
    recoverPw:
      type: object
      properties:
        email:
          type: String
          descriptions: Email del usuario
        password:
          type: String
          description: Nueva contraseña del usuario
      example:
        email: oscarramirez@test.com
        password: 123qwe
      